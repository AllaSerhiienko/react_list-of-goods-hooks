{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","none","sortField","setSortField","isReversed","setIsReversed","sortedGoods","useMemo","goods","sort","good1","good2","alphabet","localeCompare","length","reverse","getSortedGoods","className","type","onClick","cn","prevIsReversed","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,4EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,K,QAAAA,E,oBAAAA,E,iBAAAA,M,KAuCE,IAAME,EAAgB,WAC3B,MAAkCC,mBAASH,EAASI,MAApD,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoCH,oBAAS,GAA7C,mBAAOI,EAAP,KAAmBC,EAAnB,KAEMC,EAAcC,mBAAQ,kBAhC9B,SACEC,EADF,GAGa,IADTN,EACQ,EADRA,UAAWE,EACH,EADGA,WAEPE,EAAW,YAAOE,GAqBxB,OAnBIN,GACFI,EAAYG,MAAK,SAACC,EAAOC,GACvB,OAAQT,GACN,KAAKL,EAASe,SACZ,OAAOF,EAAMG,cAAcF,GAE7B,KAAKd,EAASiB,OACZ,OAAOJ,EAAMI,OAASH,EAAMG,OAE9B,QACE,OAAO,MAKXV,GACFE,EAAYS,UAGPT,EAQLU,CAAelB,EAAiB,CAAEI,YAAWE,iBAC5C,CAACN,EAAiBI,EAAWE,IAMhC,OACE,sBAAKa,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLC,QAAS,kBAAMhB,EAAaN,EAASe,WACrCK,UAAWG,IAAG,SAAU,UAAW,CACjC,WAAYlB,IAAcL,EAASe,WAErC,aAAW,4BANb,iCAWA,wBACEM,KAAK,SACLC,QAAS,kBAAMhB,EAAaN,EAASiB,SACrCG,UAAWG,IAAG,SAAU,aAAc,CACpC,WAAYlB,IAAcL,EAASiB,SAErC,aAAW,uBANb,4BAWA,wBACEI,KAAK,SACLC,QA/BmB,WACzBd,GAAc,SAAAgB,GAAc,OAAKA,MA+B3BJ,UAAWG,IAAG,SAAU,aAAc,CACpC,YAAahB,IAEf,aAAW,eANb,sBAWEF,GAAaE,IACb,wBACEc,KAAK,SACLC,QAAS,WACPhB,EAAaN,EAASI,MACtBI,GAAc,IAEhBY,UAAU,4BACV,aAAW,aAPb,sBAeJ,6BACGX,EAAYgB,KAAI,SAAAC,GAAI,OACnB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,YCxHlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.e4387679.chunk.js","sourcesContent":["import React, { useState, useMemo } from 'react';\nimport 'bulma/css/bulma.css';\nimport cn from 'classnames';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  none = '',\n  alphabet = 'alphabet',\n  length = 'length',\n}\n\ninterface SortedParams {\n  sortField: SortType;\n  isReversed: boolean;\n}\n\nfunction getSortedGoods(\n  goods: string[],\n  { sortField, isReversed }: SortedParams,\n): string[] {\n  const sortedGoods = [...goods];\n\n  if (sortField) {\n    sortedGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SortType.alphabet:\n          return good1.localeCompare(good2);\n\n        case SortType.length:\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReversed) {\n    sortedGoods.reverse();\n  }\n\n  return sortedGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortField, setSortField] = useState(SortType.none);\n  const [isReversed, setIsReversed] = useState(false);\n\n  const sortedGoods = useMemo(() => (\n    getSortedGoods(goodsFromServer, { sortField, isReversed })\n  ), [goodsFromServer, sortField, isReversed]);\n\n  const handleReverseClick = () => {\n    setIsReversed(prevIsReversed => !prevIsReversed);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          onClick={() => setSortField(SortType.alphabet)}\n          className={cn('button', 'is-info', {\n            'is-light': sortField !== SortType.alphabet,\n          })}\n          aria-label=\"Sort goods alphabetically\"\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => setSortField(SortType.length)}\n          className={cn('button', 'is-success', {\n            'is-light': sortField !== SortType.length,\n          })}\n          aria-label=\"Sort goods by length\"\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={handleReverseClick}\n          className={cn('button', 'is-warning', {\n            'is-light': !isReversed,\n          })}\n          aria-label=\"Reverse sort\"\n        >\n          Reverse\n        </button>\n\n        {(sortField || isReversed) && (\n          <button\n            type=\"button\"\n            onClick={() => {\n              setSortField(SortType.none);\n              setIsReversed(false);\n            }}\n            className=\"button is-danger is-light\"\n            aria-label=\"Reset sort\"\n          >\n            Reset\n          </button>\n        )}\n\n      </div>\n\n      <ul>\n        {sortedGoods.map(good => (\n          <li data-cy=\"Good\" key={good}>\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}